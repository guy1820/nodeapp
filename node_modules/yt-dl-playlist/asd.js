
const DownloadYTAudio = require('./lib/download-audio')

const OUT_DIR = 'test/out'
const TEST_PLAYLIST = {
  singleSong: { id: 'A02s8omM_hI', length: 1 },
  twoSongs: { id: 'PLAv2aQ9JgGbVcUtDpuiTB9WgaMljCUpa_', length: 2 },
  twoSongsDuplicated: { id: 'PLAv2aQ9JgGbVEzvdzyoigNgnJcvOtMmU0', length: 2 },
  hundredSongs: { id: 'PLzCxunOM5WFKZuBXTe8EobD6Dwi4qV-kO', length: 100 }
}

async function asd () {
  let startEvents = 0
  let progressEvents = 0
  let completeEvents = 0
  let errorEvents = 0

  const downloader = new DownloadYTAudio({
    ffmpegPath: process.env.CI ? null : require('path').join(__dirname, './ffmpeg/bin/ffmpeg'),
    outputPath: OUT_DIR
  })
  downloader.on('start', () => startEvents++)
  downloader.on('progress', () => progressEvents++)
  downloader.on('complete', () => completeEvents++)
  downloader.on('error', (e) => {
    console.log(e, errorEvents)
    errorEvents++
  })

  const result = await downloader.download(TEST_PLAYLIST.singleSong.id)
  // const result = await downloader.downloadPlaylist(TEST_PLAYLIST.twoSongs.id)
  console.log(JSON.stringify(result, null, 2))
  if (!result) {
    qwe()
  }
}

function qwe () {
  const fs = require('fs')
  const ytdl = require('ytdl-core')
  // TypeScript: import ytdl from 'ytdl-core'; with --esModuleInterop
  // TypeScript: import * as ytdl from 'ytdl-core'; with --allowSyntheticDefaultImports
  // TypeScript: import ytdl = require('ytdl-core'); with neither of the above

  // ytdl('http://www.youtube.com/watch?v=_ovdm2yX4MA', {
  // ytdl('http://www.youtube.com/watch?v=IiPm5lzU3o0', {
  ytdl('http://www.youtube.com/watch?v=A02s8omM_hI', {
    quality: 'highestaudio'
    // begin: '00:08:00.000'
  })
    .pipe(fs.createWriteStream('test\\out\\out-video.mp3'))
}

// const stream = ytdl(id, { range: { start, end } });

asd()
// qwe()
